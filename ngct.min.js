/**
 * ngct
 * @author Liksu
 * @version v1.0.0-beta.1
 * @link http://liksu.github.io/cli-panel/
 * @license MIT
 */

window.ng = {};
window.ng={},function(n){!function(n){angular.modules=[],angular.module=function(){return arguments.length>1&&angular.modules.push(arguments[0]),n.apply(null,arguments)}}(angular.module),angular.module("cli",[]).factory("$cli",function(){return n.ng={controllers:{},directives:{},services:{}},n.ng.c=n.ng.controllers,n.ng.d=n.ng.directives,n.ng.s=n.ng.services,n})}(window),function(n){angular.module("cli").run(["$injector","$cli",function(r,e){var u=angular.modules.reduce(function(n,r){return n.concat(angular.module(r)._invokeQueue)},[]),t=u.filter(function(n){return"service"===n[1]}).map(function(n){return n[2][0]});t.push("$http","$q"),t.forEach(function(e){return n.ng.services[e]=r.get(e)});u.filter(function(n){return"$controllerProvider"===n[0]||"controller"===n[1]||"directive"===n[1]}).map(function(n){return n[2][0]}).concat(t)}]),angular.module("cli").config(["$provide",function(r){angular.modules=angular.modules.filter(function(n){return"cli"!==n}),angular.modules.forEach(function(r){var e=angular.module(r)._invokeQueue.filter(function(n){return"directive"===n[1]}).map(function(n){return n[2][0]});e.forEach(function(e){angular.module(r).config(["$provide",function(r){r.decorator(e+"Directive",["$delegate",function(r){return r[0].compile=function(){return function(u,t,o){r[0].link.apply(this,arguments),n.ng.directives[e]||(n.ng.directives[e]=[]),u.$cliPosition=n.ng.directives[e].push(u)-1,u.$on("$destroy",function(){return n.ng.directives[e].splice(u.$cliPosition,1)})}},r}])}])})}),r.decorator("$controller",["$delegate",function(r){return function(e,u,t,o){return"string"==typeof e&&(n.ng.controllers[e]=u.$scope),r(e,u,t,o)}}])}])}(window);