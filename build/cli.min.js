/**
 * cli4ng - Command line interface for angular sites
 * @version v0.0.2
 * @link https://github.com/Liksu/ng-cli#readme
 * @license MIT
 */
window.cli=new function(){this.templates={},this.cache={commandInput:null,buffer:null,panel:null,show:!1},this.addHtml=function(n,e,t){this.templates[n]={html:e,selector:t||"body"}}.bind(this),document.addEventListener("DOMContentLoaded",function(){var n=this.templates,e={};Object.keys(n).forEach(function(t){var i=n[t].selector;e[i]||(e[i]=document.createElement("div"),e[i].innerHTML=""),e[i].innerHTML+=n[t].html}),Object.keys(e).forEach(function(n){document.querySelector(n).appendChild(e[n])}),this.cache.panel=document.querySelector(".cli .panel"),this.cache.commandInput=this.cache.panel.querySelector(".line .command"),this.cache.buffer=this.cache.panel.querySelector(".buffer")}.bind(this)),document.addEventListener("keydown",function(n){if(192===n.keyCode){if("INPUT"===n.target.nodeName&&n.target!==this.cache.commandInput)return;this.toggle()}else 13===n.keyCode&&n.target===this.cache.commandInput}.bind(this)),this.show=function(){this.cache.panel.className+=" show",this.cache.show=!0,this.focus()}.bind(this),this.hide=function(){this.cache.panel.className=this.cache.panel.className.replace(/\s*show/g,""),this.cache.show=!1}.bind(this),this.toggle=function(n){void 0===n&&(n=!this.cache.show),n?this.show():this.hide()}.bind(this),this.focus=function(){var n=this.cache.commandInput;setTimeout(function(){var e=n.value.length;if(n.setSelectionRange)n.setSelectionRange(e,e);else if("number"==typeof n.selectionStart)n.selectionStart=n.selectionEnd=e;else if("undefined"!=typeof n.createTextRange){n.focus();var t=n.createTextRange();t.collapse(!0),t.moveEnd(e),t.moveStart(e),t.select()}n.focus()},0)}.bind(this),this.command=function(){}},function(n){n.addHtml("panel.html",'<div class="cli">\r\n	<style>\r\n		.cli {\r\n			max-height: 64%;\r\n		}\r\n		.panel {\r\n			height: 0;\r\n			position: absolute;\r\n			top: 0;\r\n			left: 0;\r\n			right: 0;\r\n			color: white;\r\n			font: 16px monospace;\r\n			background: rgba(0, 0, 0, 0.8);\r\n			line-height: 20px;\r\n			display: none;\r\n			transition: height 2.5s linear;\r\n		}\r\n		.panel.show {\r\n			transition: height 2.5s linear;\r\n			display: block;\r\n			height: 64%;\r\n		}\r\n		.history {\r\n			overflow: auto;\r\n			white-space: pre-line;\r\n			position: absolute;\r\n			bottom: 20px;\r\n		}\r\n		.line {\r\n			position: absolute;\r\n			bottom: 0;\r\n			height: 20px;\r\n			width: 100%;\r\n		}\r\n		.command {\r\n			background: none;\r\n			border: 0;\r\n			color: white;\r\n			outline: none;\r\n			font: 16px monospace;\r\n			padding-left: 20px;\r\n			width: 100%;\r\n			box-sizing: border-box;\r\n			margin-left: -20px;\r\n		}\r\n		.loader {}\r\n		.hide_element {\r\n			display: none;\r\n		}\r\n	</style>\r\n\r\n	<div class="panel show" onclick="focus()">\r\n		<div class="history">\r\n			<span class="buffer"></span>\r\n			<span class="loader hide_element"></span>\r\n		</div>\r\n		<div class="line">\r\n			<span class="prompt"></span>\r\n			<input type="text" class="command" autofocus="autofocus"/>\r\n		</div>\r\n	</div>\r\n</div>',"body")}(window.cli);